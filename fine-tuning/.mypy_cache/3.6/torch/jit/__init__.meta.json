{"child_modules": ["torch.jit.frontend", "torch.jit._recursive", "torch.jit._builtins", "torch.jit.annotations"], "data_mtime": 1604308773, "dep_lines": [1, 1, 2, 3, 4, 5, 8, 10, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 636, 1, 1, 22, 30, 20, 23, 1, 1, 1, 19, 12, 1, 1, 1, 1, 1, 21, 22, 1, 30, 20, 1, 1, 23, 1, 1, 1, 19, 12, 1, 1, 1, 1, 1, 21, 22, 1, 30, 20, 1, 1, 23, 1, 1, 1, 19, 12, 1, 1, 1, 1, 1, 21, 22, 1, 30, 20, 1, 1, 23, 1, 1, 1, 19, 12, 1, 1, 1, 1, 1, 21, 22, 1, 30, 20, 1, 1, 23, 1, 1, 1, 19, 12, 1, 1, 1, 1, 1, 21, 22, 1, 30, 20, 1, 1, 23, 1, 1, 1, 19, 12, 1, 1, 1, 1, 1, 21, 22, 1, 30, 20, 1, 1, 23, 1, 1, 1, 19, 12, 1, 1, 1, 1, 1, 21, 22, 1, 30, 20, 1, 1, 23, 1, 1, 1, 19, 12, 1, 1, 1, 1, 1, 21, 22, 1, 30, 20, 1, 1, 23, 1, 1, 1, 19, 12, 1, 1, 1, 1, 1, 21, 22, 1, 30, 20, 1, 1, 23, 1, 1, 1, 19, 12, 1, 1, 1, 1, 1, 21, 22, 1, 30, 20, 1, 1, 23, 1, 1, 1, 19, 12, 1, 1, 1, 1, 1, 21, 22, 1, 30, 20, 1, 1, 23, 1, 1, 1, 19, 12, 1, 1, 1, 1, 1, 21, 22, 1, 30, 20, 1, 1, 23, 1, 1, 1, 19, 12, 1, 1, 1, 1, 1, 21, 22, 1, 30, 20, 1, 1, 23, 1, 1, 1, 19, 12, 1, 1, 1, 1, 1, 21, 22, 1, 30, 20, 1, 1, 23, 1, 1, 1, 19, 12, 1, 1, 1, 1, 1, 21, 22, 1, 30, 20, 1, 1, 23, 1, 1, 1, 19, 12, 1, 1, 1, 1, 1, 21, 22, 1, 30, 20, 1, 1, 23, 1, 1, 1, 19, 12, 1, 1, 1, 1, 1, 21, 22, 1, 30, 20, 1, 1, 23, 1, 1, 1, 19, 12, 1, 1, 1, 1, 1, 21, 22, 1, 30, 20, 1, 1, 23, 1, 1, 1, 19, 12, 1, 1, 1, 1, 1, 21, 22, 1, 30, 20, 1, 1, 23, 1, 1, 1, 19, 12, 1, 1, 1, 1, 1, 21, 22, 1, 30, 20, 1, 1, 23, 1, 1, 1, 19, 12, 1, 1, 1, 1, 1, 21, 22, 1, 30, 20, 1, 1, 23, 1, 1, 1, 19, 12, 1, 1, 1, 1, 1, 21, 22, 1, 30, 20, 1, 1, 23, 1, 1, 1, 19, 12, 1, 1, 1, 1, 1, 21, 22, 1, 30, 20, 1, 1, 23, 1, 1, 1, 19, 12, 1, 1, 1, 1, 1, 21, 22, 1, 30, 20, 1, 1, 23, 1, 1, 1, 19, 12, 1, 1, 1, 1, 1, 21, 22, 1, 30, 20, 1, 1, 23, 1, 1, 1, 19, 12, 1, 1, 1, 1, 1, 21, 22, 1, 30, 20, 1, 1, 23, 1, 1, 1, 19, 12, 1, 1, 1, 1, 1, 21, 22, 1, 30, 20, 1, 1, 23, 1, 1, 1, 19, 12, 1, 1, 1, 1, 1, 21, 22, 1, 30, 20, 1, 1, 23, 1, 1, 1, 19, 12, 1, 1, 1, 1, 1, 21, 22, 1, 30, 20, 1, 1, 23, 1, 1, 1, 19, 12, 1, 1, 1, 1, 1, 21, 22, 1, 30, 20, 1, 1, 23, 1, 1, 1, 19, 12, 1, 1, 1, 1, 1, 21, 22, 1, 30, 20, 1, 1, 23, 1, 1, 1, 19, 12, 1, 1, 1, 1, 1, 21, 22, 1, 30, 20, 1, 1, 23, 1, 1, 1, 19, 12, 1, 1, 1, 1, 1, 21, 22, 1, 30, 20, 1, 1, 23, 1, 1, 1, 19, 12, 1, 1, 1, 1, 1, 21, 22, 1, 30, 20, 1, 1, 23, 1, 1, 1, 19, 12, 1, 1, 1, 1, 1, 21, 22, 1, 30, 20, 1, 1, 23, 1, 1, 1, 19, 12, 1, 1, 1, 1, 1, 21, 22, 1, 30, 20, 1, 1, 23, 1, 1, 1, 19, 12, 1, 1, 1, 1, 1, 21, 22, 1, 30, 20, 1, 1, 23, 1, 1, 1, 19, 12, 1, 1, 1, 1, 1, 21, 22, 1, 30, 20, 1, 1, 23, 1, 1, 1, 19, 12, 1, 1, 1, 1, 1, 21, 22, 1, 30, 20, 1, 1, 23, 1, 1, 1, 19, 12, 1, 1, 1, 1, 1, 21, 22, 1, 30, 20, 1, 1, 23, 1, 1, 1, 19, 12, 1, 1, 1, 1, 1, 21, 22, 1, 30, 20, 1, 1, 23, 1, 1, 1, 19, 12, 1, 1, 1, 1, 1, 21, 22, 1, 30, 20, 1, 1, 23, 1, 1, 1, 19, 12, 1, 1, 1, 1, 1, 21, 22, 1, 30, 20, 1, 1, 23, 1, 1, 1, 19, 12, 1, 1, 1, 1, 1, 21, 22, 1, 30, 20, 1, 1, 23, 1, 1, 1, 19, 12, 1, 1, 1, 1, 1, 21, 22, 1, 30, 20, 1, 1, 23, 1, 1, 1, 19, 12, 1, 1, 1, 1, 1, 21, 22, 1, 30, 20, 1, 1, 23, 1, 1, 1, 19, 12, 1, 1, 1, 1, 1, 21, 22, 1, 30, 20, 1, 1, 23, 1, 1, 1, 19, 12, 1, 1, 1, 1, 1, 21, 22, 1, 30, 20, 1, 1, 23, 1, 1, 1, 19, 12, 1, 1, 1, 1, 1, 21, 22, 1, 30, 20, 1, 1, 23, 1, 1, 1, 19, 12, 1, 1, 1, 1, 1, 21, 22, 1, 30, 20, 1, 1, 23, 1, 1, 1, 19, 12, 1, 1, 1, 1, 1, 21, 22, 1, 30, 20, 1, 1, 23, 1, 1, 1, 19, 12, 1, 1, 1, 1, 1, 21, 22, 1, 30, 20, 1, 1, 23, 1, 1, 1, 19, 12, 1, 1, 1, 1, 1, 21, 22, 1, 30, 20, 1, 1, 23, 1, 1, 1, 19, 12, 1, 1, 1, 1, 1, 21, 22, 1, 30, 20, 1, 1, 23, 1, 1, 1, 19, 12, 1, 1, 1, 1, 1, 21, 22, 1, 30, 20, 1, 1, 23, 1, 1, 1, 19, 12, 1, 1, 1, 1, 1, 21, 22, 1, 30, 20, 1, 1, 23, 1, 1, 1, 19, 12, 1, 1, 1, 1, 1, 21, 22, 1, 30, 20, 1, 1, 23, 1, 1, 1, 19, 12, 1, 1, 1, 1, 1, 21, 22, 1, 30, 20, 1, 1, 23, 1, 1, 1, 19, 12, 1, 1, 1, 1, 1, 21, 22, 1, 30, 20, 1, 1, 23, 1, 1, 1, 19, 12, 1, 1, 1, 1, 1, 21, 22, 1, 30, 20, 1, 1, 23, 1, 1, 1, 19, 12, 1, 1, 1, 1, 1, 21, 22, 1, 30, 20, 1, 1, 23, 1, 1, 1, 19, 12, 1, 1, 1, 1, 1, 21, 22, 1, 30, 20, 1, 1, 23, 1, 1, 1, 19, 12, 1, 1, 1, 1, 1, 21, 22, 1, 30, 20, 1, 1, 23, 1, 1, 1, 19, 12, 1, 1, 1, 1, 1, 21, 22, 1, 30, 20, 1, 1, 23, 1, 1, 1, 19, 12, 1, 1, 1, 1, 1, 21, 22, 1, 30, 20, 1, 1, 23, 1, 1, 1, 19, 12, 1, 1, 1, 1, 1, 21, 22, 1, 30, 20, 1, 1, 23, 1, 1, 1, 19, 12, 1, 1, 1, 1, 1, 21, 22, 1, 30, 20, 1, 1, 23, 1, 1, 1, 19, 12, 1, 1, 1, 1, 1, 21, 22, 1, 30, 20, 1, 1, 23, 1, 1, 1, 19, 12, 1, 1, 1, 1, 1, 21, 22, 1, 30, 20, 1, 1, 23, 1, 1, 1, 19, 12, 1, 1, 1, 1, 1, 21, 22, 1, 30, 20, 1, 1, 23, 1, 1, 1, 19, 12, 1, 1, 1, 1, 1, 21, 22, 1, 30, 20, 1, 1, 23, 1, 1, 1, 19, 12, 1, 1, 1, 1, 1, 21, 22, 1, 30, 20, 1, 1, 23, 1, 1, 1, 19, 12, 1, 1, 1, 1, 1, 21, 22, 1, 30, 20, 1, 1, 23, 1, 1, 1, 19, 12, 1, 1, 1, 1, 1, 21, 22, 1, 30, 20, 1, 1, 23, 1, 1, 1, 19, 12, 1, 1, 1, 1, 1, 21, 22, 1, 30, 20, 1, 1, 23, 1, 1, 1, 19, 12, 1, 1, 1, 1, 1, 21, 22, 1, 30, 20, 1, 1, 23, 1, 1, 1, 19, 12, 1, 1, 1, 1, 1, 21, 22, 1, 30, 20, 1, 1, 23, 1, 1, 1, 19, 12, 1, 1, 1, 1, 1, 21, 22, 1, 30, 20, 1, 1, 23, 1, 1, 1, 19, 12, 1, 1, 1, 1, 1, 21, 22, 1, 30, 20, 1, 1, 23, 1, 1, 1, 19, 12, 1, 1, 1, 1, 1, 21, 22, 1, 30, 20, 1, 1, 23, 1, 1, 1, 19, 12, 1, 1, 1, 1, 1, 21, 22, 1, 30, 20, 1, 1, 23, 1, 1, 1, 19, 12, 1, 1, 1, 1, 1, 21, 22, 1, 30, 20, 1, 1, 23, 1, 1, 1, 19, 12, 1, 1, 1, 1, 1, 21, 22, 1, 30, 20, 1, 1, 23, 1, 1, 1, 19, 12, 1, 1, 1, 1, 1, 21, 22, 1, 30, 20, 1, 1, 23, 1, 1, 1, 19, 12, 1, 1, 1, 1, 1, 21, 22, 1, 30, 20, 1, 1, 23, 1, 1, 1, 19, 12, 1, 1, 1, 1, 1, 21, 22, 1, 30, 20, 1, 1, 23, 1, 1, 1, 19, 12, 1, 1, 1, 1, 1, 21, 22, 1, 30, 20, 1, 1, 23, 1, 1, 1, 19, 12, 1, 1, 1, 1, 1, 21, 22, 1, 30, 20, 1, 1, 23, 1, 1, 1, 19, 12, 1, 1, 1, 1, 1, 21, 22, 1, 30, 20, 1, 1, 23, 1, 1, 1, 19, 12, 1, 1, 1, 1, 1, 21, 22, 1, 30, 20, 1, 1, 23, 1, 1, 1, 19, 12, 1, 1, 1, 1, 1, 21, 22, 1, 30, 20, 1, 1, 23, 1, 1, 1, 19, 12, 1, 1, 1, 1, 1, 21, 22, 1, 30, 20, 1, 1, 23, 1, 1, 1, 19, 12, 1, 1, 1, 1, 1, 21, 22, 1, 30, 20, 1, 1, 23, 1, 1, 1, 19, 12, 1, 1, 1, 1, 1, 21, 22, 1, 30, 20, 1, 1, 23, 1, 1, 1, 19, 12, 1, 1, 1, 1, 1, 21, 22, 1, 30, 20, 1, 1, 23, 1, 1, 1, 19, 12, 1, 1, 1, 1, 1, 21, 22, 1, 30, 20, 1, 1, 23, 1, 1, 1, 19, 12, 1, 1, 1, 1, 1, 21, 22, 1, 30, 20, 1, 1, 23, 1, 1, 1, 19, 12, 1, 1, 1, 1, 1, 21, 22, 1, 30, 20, 1, 1, 23, 1, 1, 1, 19, 12, 1, 1, 1, 1, 1, 21, 22, 1, 30, 20, 1, 1, 23, 1, 1, 1, 19, 12, 1, 1, 1, 1, 1, 21, 22, 1, 30, 20, 1, 1, 23, 1, 1, 1, 19, 12, 1, 1, 1, 1, 1, 21, 22, 1, 30, 20, 1, 1, 23, 1, 1, 1, 19, 12, 1, 1, 1, 1, 1, 21, 22, 1, 30, 20, 1, 1, 23, 1, 1, 1, 19, 12, 1, 1, 1, 1, 1, 21, 22, 1, 30, 20, 1, 1, 23, 1, 1, 1, 19, 12, 1, 1, 1, 1, 1, 21, 22, 1, 30, 20, 1, 1, 23, 1, 1, 1, 19, 12, 1, 1, 1, 1, 1, 21, 22, 1, 30, 20, 1, 1, 23, 1, 1, 1, 19, 12, 1, 1, 1, 1, 1, 21, 22, 1, 30, 20, 1, 1, 23, 1, 1, 1, 19, 12, 1, 1, 1, 1, 1, 21, 22, 1, 30, 20, 1, 1, 23, 1, 1, 1, 19, 12, 1, 1, 1, 1, 1, 21, 22, 1, 30, 20, 1, 1, 23, 1, 1, 1, 19, 12, 1, 1, 1, 1, 1, 21, 22, 1, 30, 20, 1, 1, 23, 1, 1, 1, 19, 12, 1, 1, 1, 1, 1, 21, 22, 1, 30, 20, 1, 1, 23, 1, 1, 1, 19, 12, 1, 1, 1, 1, 1, 21, 22, 1, 30, 20, 1, 1, 23, 1, 1, 1, 19, 12, 1, 1, 1, 1, 1, 21, 22, 1, 30, 20, 1, 1, 23, 1, 1, 1, 19, 12, 1, 1, 1, 1, 1, 21, 22, 1, 30, 20, 1, 1, 23, 1, 1, 1, 19, 12, 1, 1, 1, 1, 1, 21, 22, 1, 30, 20, 1, 1, 23, 1, 1, 1, 19, 12, 1, 1, 1, 1, 1, 21, 22, 1, 30, 20, 1, 1, 23, 1, 1, 1, 19, 12, 1, 1, 1, 1, 1, 21, 22, 1, 30, 20, 1, 1, 23, 1, 1, 1, 19, 12, 1, 1, 1, 1, 1, 21, 22, 1, 30, 20, 1, 1, 23, 1, 1, 1, 19, 12, 1, 1, 1, 1, 1, 21, 22, 1, 30, 20, 1, 1, 23, 1, 1, 1, 19, 12, 1, 1, 1, 1, 1, 21, 22, 1, 30, 20, 1, 1, 23, 1, 1, 1, 19, 12, 1, 1, 1, 1, 1, 21, 22, 1, 30, 20, 1, 1, 23, 1, 1, 1, 19, 12, 1, 1, 1, 1, 1, 21, 22, 1, 30, 20, 1, 1, 23, 1, 1, 1, 19, 12, 1, 1, 1, 1, 1, 21, 22, 1, 30, 20, 1, 1, 23, 1, 1, 1, 19, 12, 1, 1, 1, 1, 1, 21, 22, 1, 30, 20, 1, 1, 23, 1, 1, 1, 19, 12, 1, 1, 1, 1, 1, 21, 22, 1, 30, 20, 1, 1, 23, 1, 1, 1, 19, 12, 1, 1, 1, 1, 1, 21, 22, 1, 30, 20, 1, 1, 23, 1, 1, 1, 19, 12, 1, 1, 1, 1, 1, 21, 22, 1, 30, 20, 1, 1, 23, 1, 1, 1, 19, 12, 1, 1, 1, 1, 1, 21, 22, 1, 30, 20, 1, 1, 23, 1, 1, 1, 19, 12, 1, 1, 1, 1, 1, 21, 22, 1, 30, 20, 1, 1, 23, 1, 1, 1, 19, 12, 1, 1, 1, 1, 1, 21, 22, 1, 30, 20, 1, 1, 23, 1, 1, 1, 19, 12, 1, 1, 1, 1, 1, 21, 22, 1, 30, 20, 1, 1, 23, 1, 1, 1, 19, 12, 1, 1, 1, 1, 1, 21, 22, 1, 30, 20, 1, 1, 23, 1, 1, 1, 19, 12, 1, 1, 1, 1, 1, 21, 22, 1, 30, 20, 1, 1, 23, 1, 1, 1, 19, 12, 1, 1, 1, 1, 1, 21, 22, 1, 30, 20, 1, 1, 23, 1, 1, 1, 19, 12, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], "dep_prios": [10, 20, 5, 10, 10, 5, 5, 5, 10, 5, 5, 5, 5, 5, 5, 5, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 20, 5, 20, 10, 10, 10, 10, 20, 20, 20, 10, 5, 20, 20, 20, 20, 20, 10, 10, 20, 10, 10, 20, 20, 10, 20, 20, 20, 10, 5, 20, 20, 20, 20, 20, 10, 10, 20, 10, 10, 20, 20, 10, 20, 20, 20, 10, 5, 20, 20, 20, 20, 20, 10, 10, 20, 10, 10, 20, 20, 10, 20, 20, 20, 10, 5, 20, 20, 20, 20, 20, 10, 10, 20, 10, 10, 20, 20, 10, 20, 20, 20, 10, 5, 20, 20, 20, 20, 20, 10, 10, 20, 10, 10, 20, 20, 10, 20, 20, 20, 10, 5, 20, 20, 20, 20, 20, 10, 10, 20, 10, 10, 20, 20, 10, 20, 20, 20, 10, 5, 20, 20, 20, 20, 20, 10, 10, 20, 10, 10, 20, 20, 10, 20, 20, 20, 10, 5, 20, 20, 20, 20, 20, 10, 10, 20, 10, 10, 20, 20, 10, 20, 20, 20, 10, 5, 20, 20, 20, 20, 20, 10, 10, 20, 10, 10, 20, 20, 10, 20, 20, 20, 10, 5, 20, 20, 20, 20, 20, 10, 10, 20, 10, 10, 20, 20, 10, 20, 20, 20, 10, 5, 20, 20, 20, 20, 20, 10, 10, 20, 10, 10, 20, 20, 10, 20, 20, 20, 10, 5, 20, 20, 20, 20, 20, 10, 10, 20, 10, 10, 20, 20, 10, 20, 20, 20, 10, 5, 20, 20, 20, 20, 20, 10, 10, 20, 10, 10, 20, 20, 10, 20, 20, 20, 10, 5, 20, 20, 20, 20, 20, 10, 10, 20, 10, 10, 20, 20, 10, 20, 20, 20, 10, 5, 20, 20, 20, 20, 20, 10, 10, 20, 10, 10, 20, 20, 10, 20, 20, 20, 10, 5, 20, 20, 20, 20, 20, 10, 10, 20, 10, 10, 20, 20, 10, 20, 20, 20, 10, 5, 20, 20, 20, 20, 20, 10, 10, 20, 10, 10, 20, 20, 10, 20, 20, 20, 10, 5, 20, 20, 20, 20, 20, 10, 10, 20, 10, 10, 20, 20, 10, 20, 20, 20, 10, 5, 20, 20, 20, 20, 20, 10, 10, 20, 10, 10, 20, 20, 10, 20, 20, 20, 10, 5, 20, 20, 20, 20, 20, 10, 10, 20, 10, 10, 20, 20, 10, 20, 20, 20, 10, 5, 20, 20, 20, 20, 20, 10, 10, 20, 10, 10, 20, 20, 10, 20, 20, 20, 10, 5, 20, 20, 20, 20, 20, 10, 10, 20, 10, 10, 20, 20, 10, 20, 20, 20, 10, 5, 20, 20, 20, 20, 20, 10, 10, 20, 10, 10, 20, 20, 10, 20, 20, 20, 10, 5, 20, 20, 20, 20, 20, 10, 10, 20, 10, 10, 20, 20, 10, 20, 20, 20, 10, 5, 20, 20, 20, 20, 20, 10, 10, 20, 10, 10, 20, 20, 10, 20, 20, 20, 10, 5, 20, 20, 20, 20, 20, 10, 10, 20, 10, 10, 20, 20, 10, 20, 20, 20, 10, 5, 20, 20, 20, 20, 20, 10, 10, 20, 10, 10, 20, 20, 10, 20, 20, 20, 10, 5, 20, 20, 20, 20, 20, 10, 10, 20, 10, 10, 20, 20, 10, 20, 20, 20, 10, 5, 20, 20, 20, 20, 20, 10, 10, 20, 10, 10, 20, 20, 10, 20, 20, 20, 10, 5, 20, 20, 20, 20, 20, 10, 10, 20, 10, 10, 20, 20, 10, 20, 20, 20, 10, 5, 20, 20, 20, 20, 20, 10, 10, 20, 10, 10, 20, 20, 10, 20, 20, 20, 10, 5, 20, 20, 20, 20, 20, 10, 10, 20, 10, 10, 20, 20, 10, 20, 20, 20, 10, 5, 20, 20, 20, 20, 20, 10, 10, 20, 10, 10, 20, 20, 10, 20, 20, 20, 10, 5, 20, 20, 20, 20, 20, 10, 10, 20, 10, 10, 20, 20, 10, 20, 20, 20, 10, 5, 20, 20, 20, 20, 20, 10, 10, 20, 10, 10, 20, 20, 10, 20, 20, 20, 10, 5, 20, 20, 20, 20, 20, 10, 10, 20, 10, 10, 20, 20, 10, 20, 20, 20, 10, 5, 20, 20, 20, 20, 20, 10, 10, 20, 10, 10, 20, 20, 10, 20, 20, 20, 10, 5, 20, 20, 20, 20, 20, 10, 10, 20, 10, 10, 20, 20, 10, 20, 20, 20, 10, 5, 20, 20, 20, 20, 20, 10, 10, 20, 10, 10, 20, 20, 10, 20, 20, 20, 10, 5, 20, 20, 20, 20, 20, 10, 10, 20, 10, 10, 20, 20, 10, 20, 20, 20, 10, 5, 20, 20, 20, 20, 20, 10, 10, 20, 10, 10, 20, 20, 10, 20, 20, 20, 10, 5, 20, 20, 20, 20, 20, 10, 10, 20, 10, 10, 20, 20, 10, 20, 20, 20, 10, 5, 20, 20, 20, 20, 20, 10, 10, 20, 10, 10, 20, 20, 10, 20, 20, 20, 10, 5, 20, 20, 20, 20, 20, 10, 10, 20, 10, 10, 20, 20, 10, 20, 20, 20, 10, 5, 20, 20, 20, 20, 20, 10, 10, 20, 10, 10, 20, 20, 10, 20, 20, 20, 10, 5, 20, 20, 20, 20, 20, 10, 10, 20, 10, 10, 20, 20, 10, 20, 20, 20, 10, 5, 20, 20, 20, 20, 20, 10, 10, 20, 10, 10, 20, 20, 10, 20, 20, 20, 10, 5, 20, 20, 20, 20, 20, 10, 10, 20, 10, 10, 20, 20, 10, 20, 20, 20, 10, 5, 20, 20, 20, 20, 20, 10, 10, 20, 10, 10, 20, 20, 10, 20, 20, 20, 10, 5, 20, 20, 20, 20, 20, 10, 10, 20, 10, 10, 20, 20, 10, 20, 20, 20, 10, 5, 20, 20, 20, 20, 20, 10, 10, 20, 10, 10, 20, 20, 10, 20, 20, 20, 10, 5, 20, 20, 20, 20, 20, 10, 10, 20, 10, 10, 20, 20, 10, 20, 20, 20, 10, 5, 20, 20, 20, 20, 20, 10, 10, 20, 10, 10, 20, 20, 10, 20, 20, 20, 10, 5, 20, 20, 20, 20, 20, 10, 10, 20, 10, 10, 20, 20, 10, 20, 20, 20, 10, 5, 20, 20, 20, 20, 20, 10, 10, 20, 10, 10, 20, 20, 10, 20, 20, 20, 10, 5, 20, 20, 20, 20, 20, 10, 10, 20, 10, 10, 20, 20, 10, 20, 20, 20, 10, 5, 20, 20, 20, 20, 20, 10, 10, 20, 10, 10, 20, 20, 10, 20, 20, 20, 10, 5, 20, 20, 20, 20, 20, 10, 10, 20, 10, 10, 20, 20, 10, 20, 20, 20, 10, 5, 20, 20, 20, 20, 20, 10, 10, 20, 10, 10, 20, 20, 10, 20, 20, 20, 10, 5, 20, 20, 20, 20, 20, 10, 10, 20, 10, 10, 20, 20, 10, 20, 20, 20, 10, 5, 20, 20, 20, 20, 20, 10, 10, 20, 10, 10, 20, 20, 10, 20, 20, 20, 10, 5, 20, 20, 20, 20, 20, 10, 10, 20, 10, 10, 20, 20, 10, 20, 20, 20, 10, 5, 20, 20, 20, 20, 20, 10, 10, 20, 10, 10, 20, 20, 10, 20, 20, 20, 10, 5, 20, 20, 20, 20, 20, 10, 10, 20, 10, 10, 20, 20, 10, 20, 20, 20, 10, 5, 20, 20, 20, 20, 20, 10, 10, 20, 10, 10, 20, 20, 10, 20, 20, 20, 10, 5, 20, 20, 20, 20, 20, 10, 10, 20, 10, 10, 20, 20, 10, 20, 20, 20, 10, 5, 20, 20, 20, 20, 20, 10, 10, 20, 10, 10, 20, 20, 10, 20, 20, 20, 10, 5, 20, 20, 20, 20, 20, 10, 10, 20, 10, 10, 20, 20, 10, 20, 20, 20, 10, 5, 20, 20, 20, 20, 20, 10, 10, 20, 10, 10, 20, 20, 10, 20, 20, 20, 10, 5, 20, 20, 20, 20, 20, 10, 10, 20, 10, 10, 20, 20, 10, 20, 20, 20, 10, 5, 20, 20, 20, 20, 20, 10, 10, 20, 10, 10, 20, 20, 10, 20, 20, 20, 10, 5, 20, 20, 20, 20, 20, 10, 10, 20, 10, 10, 20, 20, 10, 20, 20, 20, 10, 5, 20, 20, 20, 20, 20, 10, 10, 20, 10, 10, 20, 20, 10, 20, 20, 20, 10, 5, 20, 20, 20, 20, 20, 10, 10, 20, 10, 10, 20, 20, 10, 20, 20, 20, 10, 5, 20, 20, 20, 20, 20, 10, 10, 20, 10, 10, 20, 20, 10, 20, 20, 20, 10, 5, 20, 20, 20, 20, 20, 10, 10, 20, 10, 10, 20, 20, 10, 20, 20, 20, 10, 5, 20, 20, 20, 20, 20, 10, 10, 20, 10, 10, 20, 20, 10, 20, 20, 20, 10, 5, 20, 20, 20, 20, 20, 10, 10, 20, 10, 10, 20, 20, 10, 20, 20, 20, 10, 5, 20, 20, 20, 20, 20, 10, 10, 20, 10, 10, 20, 20, 10, 20, 20, 20, 10, 5, 20, 20, 20, 20, 20, 10, 10, 20, 10, 10, 20, 20, 10, 20, 20, 20, 10, 5, 20, 20, 20, 20, 20, 10, 10, 20, 10, 10, 20, 20, 10, 20, 20, 20, 10, 5, 20, 20, 20, 20, 20, 10, 10, 20, 10, 10, 20, 20, 10, 20, 20, 20, 10, 5, 20, 20, 20, 20, 20, 10, 10, 20, 10, 10, 20, 20, 10, 20, 20, 20, 10, 5, 20, 20, 20, 20, 20, 10, 10, 20, 10, 10, 20, 20, 10, 20, 20, 20, 10, 5, 20, 20, 20, 20, 20, 10, 10, 20, 10, 10, 20, 20, 10, 20, 20, 20, 10, 5, 20, 20, 20, 20, 20, 10, 10, 20, 10, 10, 20, 20, 10, 20, 20, 20, 10, 5, 20, 20, 20, 20, 20, 10, 10, 20, 10, 10, 20, 20, 10, 20, 20, 20, 10, 5, 20, 20, 20, 20, 20, 10, 10, 20, 10, 10, 20, 20, 10, 20, 20, 20, 10, 5, 20, 20, 20, 20, 20, 10, 10, 20, 10, 10, 20, 20, 10, 20, 20, 20, 10, 5, 20, 20, 20, 20, 20, 10, 10, 20, 10, 10, 20, 20, 10, 20, 20, 20, 10, 5, 20, 20, 20, 20, 20, 10, 10, 20, 10, 10, 20, 20, 10, 20, 20, 20, 10, 5, 20, 20, 20, 20, 20, 10, 10, 20, 10, 10, 20, 20, 10, 20, 20, 20, 10, 5, 20, 20, 20, 20, 20, 10, 10, 20, 10, 10, 20, 20, 10, 20, 20, 20, 10, 5, 20, 20, 20, 20, 20, 10, 10, 20, 10, 10, 20, 20, 10, 20, 20, 20, 10, 5, 20, 20, 20, 20, 20, 10, 10, 20, 10, 10, 20, 20, 10, 20, 20, 20, 10, 5, 20, 20, 20, 20, 20, 10, 10, 20, 10, 10, 20, 20, 10, 20, 20, 20, 10, 5, 20, 20, 20, 20, 20, 10, 10, 20, 10, 10, 20, 20, 10, 20, 20, 20, 10, 5, 20, 20, 20, 20, 20, 10, 10, 20, 10, 10, 20, 20, 10, 20, 20, 20, 10, 5, 20, 20, 20, 20, 20, 10, 10, 20, 10, 10, 20, 20, 10, 20, 20, 20, 10, 5, 20, 20, 20, 20, 20, 10, 10, 20, 10, 10, 20, 20, 10, 20, 20, 20, 10, 5, 20, 20, 20, 20, 20, 10, 10, 20, 10, 10, 20, 20, 10, 20, 20, 20, 10, 5, 20, 20, 20, 20, 20, 10, 10, 20, 10, 10, 20, 20, 10, 20, 20, 20, 10, 5, 20, 20, 20, 20, 20, 10, 10, 20, 10, 10, 20, 20, 10, 20, 20, 20, 10, 5, 20, 20, 20, 20, 20, 10, 10, 20, 10, 10, 20, 20, 10, 20, 20, 20, 10, 5, 20, 20, 20, 20, 20, 10, 10, 20, 10, 10, 20, 20, 10, 20, 20, 20, 10, 5, 20, 20, 20, 20, 20, 10, 10, 20, 10, 10, 20, 20, 10, 20, 20, 20, 10, 5, 20, 20, 20, 20, 20, 10, 10, 20, 10, 10, 20, 20, 10, 20, 20, 20, 10, 5, 20, 20, 20, 20, 20, 10, 10, 20, 10, 10, 20, 20, 10, 20, 20, 20, 10, 5, 20, 20, 20, 20, 20, 10, 10, 20, 10, 10, 20, 20, 10, 20, 20, 20, 10, 5, 20, 20, 20, 20, 20, 10, 10, 20, 10, 10, 20, 20, 10, 20, 20, 20, 10, 5, 20, 20, 20, 20, 20, 10, 10, 20, 10, 10, 20, 20, 10, 20, 20, 20, 10, 5, 20, 20, 20, 20, 20, 10, 10, 20, 10, 10, 20, 20, 10, 20, 20, 20, 10, 5, 20, 20, 20, 20, 20, 10, 10, 20, 10, 10, 20, 20, 10, 20, 20, 20, 10, 5, 20, 20, 20, 20, 20, 10, 10, 20, 10, 10, 20, 20, 10, 20, 20, 20, 10, 5, 20, 20, 20, 20, 20, 10, 10, 20, 10, 10, 20, 20, 10, 20, 20, 20, 10, 5, 20, 20, 20, 20, 20, 10, 10, 20, 10, 10, 20, 20, 10, 20, 20, 20, 10, 5, 20, 20, 20, 20, 20, 10, 10, 20, 10, 10, 20, 20, 10, 20, 20, 20, 10, 5, 20, 20, 20, 20, 20, 10, 10, 20, 10, 10, 20, 20, 10, 20, 20, 20, 10, 5, 20, 20, 20, 20, 20, 10, 10, 20, 10, 10, 20, 20, 10, 20, 20, 20, 10, 5, 20, 20, 20, 20, 20, 10, 10, 20, 10, 10, 20, 20, 10, 20, 20, 20, 10, 5, 20, 20, 20, 20, 20, 10, 10, 20, 10, 10, 20, 20, 10, 20, 20, 20, 10, 5, 20, 20, 20, 20, 20, 10, 10, 20, 10, 10, 20, 20, 10, 20, 20, 20, 10, 5, 20, 20, 20, 20, 20, 10, 10, 20, 10, 10, 20, 20, 10, 20, 20, 20, 10, 5, 20, 20, 20, 20, 20, 10, 10, 20, 10, 10, 20, 20, 10, 20, 20, 20, 10, 5, 20, 20, 20, 20, 20, 10, 10, 20, 10, 10, 20, 20, 10, 20, 20, 20, 10, 5, 20, 20, 20, 20, 20, 10, 10, 20, 10, 10, 20, 20, 10, 20, 20, 20, 10, 5, 20, 20, 20, 20, 20, 10, 10, 20, 10, 10, 20, 20, 10, 20, 20, 20, 10, 5, 20, 20, 20, 20, 20, 10, 10, 20, 10, 10, 20, 20, 10, 20, 20, 20, 10, 5, 20, 20, 20, 20, 20, 10, 10, 20, 10, 10, 20, 20, 10, 20, 20, 20, 10, 5, 20, 20, 20, 20, 20, 10, 10, 20, 10, 10, 20, 20, 10, 20, 20, 20, 10, 5, 20, 20, 20, 20, 20, 10, 10, 20, 10, 10, 20, 20, 10, 20, 20, 20, 10, 5, 20, 20, 20, 20, 20, 10, 10, 20, 10, 10, 20, 20, 10, 20, 20, 20, 10, 5, 20, 20, 20, 20, 20, 10, 10, 20, 10, 10, 20, 20, 10, 20, 20, 20, 10, 5, 20, 20, 20, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30], "dependencies": ["torch._C", "torch", "torch._jit_internal", "torch.jit.annotations", "torch.testing", "torch.jit._recursive", "torch.jit._builtins", "torch.autograd", "torch.autograd.function", "torch.jit.frontend", "torch.nn", "torch.serialization", "torch._six", "torch.utils", "torch.autograd.grad_mode", "typing", "collections", "contextlib", "copy", "functools", "inspect", "os", "pathlib", "pickle", "re", "sys", "textwrap", "warnings", "weakref", "difflib", "builtins", "threading", "functools", "warnings", "contextlib", "inspect", "logging", "torch", "math", "collections", "torch.nn", "numbers", "torch.distributed.rpc.backend_registry", "torch.distributed", "torch.nn.intrinsic", "threading", "copy", "functools", "enum", "warnings", "contextlib", "itertools", "torch.nn.quantized", "inspect", "logging", "torch", "math", "collections", "torch.nn", "numbers", "torch.distributed.rpc.backend_registry", "torch.distributed", "torch.nn.intrinsic", "threading", "copy", "functools", "enum", "warnings", "contextlib", "itertools", "torch.nn.quantized", "inspect", "logging", "torch", "math", "collections", "torch.nn", "numbers", "torch.distributed.rpc.backend_registry", "torch.distributed", "torch.nn.intrinsic", "threading", "copy", "functools", "enum", "warnings", "contextlib", "itertools", "torch.nn.quantized", "inspect", "logging", "torch", "math", "collections", "torch.nn", "numbers", "torch.distributed.rpc.backend_registry", "torch.distributed", "torch.nn.intrinsic", "threading", "copy", "functools", "enum", "warnings", "contextlib", "itertools", "torch.nn.quantized", "inspect", "logging", "torch", "math", "collections", "torch.nn", "numbers", "torch.distributed.rpc.backend_registry", "torch.distributed", "torch.nn.intrinsic", "threading", "copy", "functools", "enum", "warnings", "contextlib", "itertools", "torch.nn.quantized", "inspect", "logging", "torch", "math", "collections", "torch.nn", "numbers", "torch.distributed.rpc.backend_registry", "torch.distributed", "torch.nn.intrinsic", "threading", "copy", "functools", "enum", "warnings", "contextlib", "itertools", "torch.nn.quantized", "inspect", "logging", "torch", "math", "collections", "torch.nn", "numbers", "torch.distributed.rpc.backend_registry", "torch.distributed", "torch.nn.intrinsic", "threading", "copy", "functools", "enum", "warnings", "contextlib", "itertools", "torch.nn.quantized", "inspect", "logging", "torch", "math", "collections", "torch.nn", "numbers", "torch.distributed.rpc.backend_registry", "torch.distributed", "torch.nn.intrinsic", "threading", "copy", "functools", "enum", "warnings", "contextlib", "itertools", "torch.nn.quantized", "inspect", "logging", "torch", "math", "collections", "torch.nn", "numbers", "torch.distributed.rpc.backend_registry", "torch.distributed", "torch.nn.intrinsic", "threading", "copy", "functools", "enum", "warnings", "contextlib", "itertools", "torch.nn.quantized", "inspect", "logging", "torch", "math", "collections", "torch.nn", "numbers", "torch.distributed.rpc.backend_registry", "torch.distributed", "torch.nn.intrinsic", "threading", "copy", "functools", "enum", "warnings", "contextlib", "itertools", "torch.nn.quantized", "inspect", "logging", "torch", "math", "collections", "torch.nn", "numbers", "torch.distributed.rpc.backend_registry", "torch.distributed", "torch.nn.intrinsic", "threading", "copy", "functools", "enum", "warnings", "contextlib", "itertools", "torch.nn.quantized", "inspect", "logging", "torch", "math", "collections", "torch.nn", "numbers", "torch.distributed.rpc.backend_registry", "torch.distributed", "torch.nn.intrinsic", "threading", "copy", "functools", "enum", "warnings", "contextlib", "itertools", "torch.nn.quantized", "inspect", "logging", "torch", "math", "collections", "torch.nn", "numbers", "torch.distributed.rpc.backend_registry", "torch.distributed", "torch.nn.intrinsic", "threading", "copy", "functools", "enum", "warnings", "contextlib", "itertools", "torch.nn.quantized", "inspect", "logging", "torch", "math", "collections", "torch.nn", "numbers", "torch.distributed.rpc.backend_registry", "torch.distributed", "torch.nn.intrinsic", "threading", "copy", "functools", "enum", "warnings", "contextlib", "itertools", "torch.nn.quantized", "inspect", "logging", "torch", "math", "collections", "torch.nn", "numbers", "torch.distributed.rpc.backend_registry", "torch.distributed", "torch.nn.intrinsic", "threading", "copy", "functools", "enum", "warnings", "contextlib", "itertools", "torch.nn.quantized", "inspect", "logging", "torch", "math", "collections", "torch.nn", "numbers", "torch.distributed.rpc.backend_registry", "torch.distributed", "torch.nn.intrinsic", "threading", "copy", "functools", "enum", "warnings", "contextlib", "itertools", "torch.nn.quantized", "inspect", "logging", "torch", "math", "collections", "torch.nn", "numbers", "torch.distributed.rpc.backend_registry", "torch.distributed", "torch.nn.intrinsic", "threading", "copy", "functools", "enum", "warnings", "contextlib", "itertools", "torch.nn.quantized", "inspect", "logging", "torch", "math", "collections", "torch.nn", "numbers", "torch.distributed.rpc.backend_registry", "torch.distributed", "torch.nn.intrinsic", "threading", "copy", "functools", "enum", "warnings", "contextlib", "itertools", "torch.nn.quantized", "inspect", "logging", "torch", "math", "collections", "torch.nn", "numbers", "torch.distributed.rpc.backend_registry", "torch.distributed", "torch.nn.intrinsic", "threading", "copy", "functools", "enum", "warnings", "contextlib", "itertools", "torch.nn.quantized", "inspect", "logging", "torch", "math", "collections", "torch.nn", "numbers", "torch.distributed.rpc.backend_registry", "torch.distributed", "torch.nn.intrinsic", "threading", "copy", "functools", "enum", "warnings", "contextlib", "itertools", "torch.nn.quantized", "inspect", "logging", "torch", "math", "collections", "torch.nn", "numbers", "torch.distributed.rpc.backend_registry", "torch.distributed", "torch.nn.intrinsic", "threading", "copy", "functools", "enum", "warnings", "contextlib", "itertools", "torch.nn.quantized", "inspect", "logging", "torch", "math", "collections", "torch.nn", "numbers", "torch.distributed.rpc.backend_registry", "torch.distributed", "torch.nn.intrinsic", "threading", "copy", "functools", "enum", "warnings", "contextlib", "itertools", "torch.nn.quantized", "inspect", "logging", "torch", "math", "collections", "torch.nn", "numbers", "torch.distributed.rpc.backend_registry", "torch.distributed", "torch.nn.intrinsic", "threading", "copy", "functools", "enum", "warnings", "contextlib", "itertools", "torch.nn.quantized", "inspect", "logging", "torch", "math", "collections", "torch.nn", "numbers", "torch.distributed.rpc.backend_registry", "torch.distributed", "torch.nn.intrinsic", "threading", "copy", "functools", "enum", "warnings", "contextlib", "itertools", "torch.nn.quantized", "inspect", "logging", "torch", "math", "collections", "torch.nn", "numbers", "torch.distributed.rpc.backend_registry", "torch.distributed", "torch.nn.intrinsic", "threading", "copy", "functools", "enum", "warnings", "contextlib", "itertools", "torch.nn.quantized", "inspect", "logging", "torch", "math", "collections", "torch.nn", "numbers", "torch.distributed.rpc.backend_registry", "torch.distributed", "torch.nn.intrinsic", "threading", "copy", "functools", "enum", "warnings", "contextlib", "itertools", "torch.nn.quantized", "inspect", "logging", "torch", "math", "collections", "torch.nn", "numbers", "torch.distributed.rpc.backend_registry", "torch.distributed", "torch.nn.intrinsic", "threading", "copy", "functools", "enum", "warnings", "contextlib", "itertools", "torch.nn.quantized", "inspect", "logging", "torch", "math", "collections", "torch.nn", "numbers", "torch.distributed.rpc.backend_registry", "torch.distributed", "torch.nn.intrinsic", "threading", "copy", "functools", "enum", "warnings", "contextlib", "itertools", "torch.nn.quantized", "inspect", "logging", "torch", "math", "collections", "torch.nn", "numbers", "torch.distributed.rpc.backend_registry", "torch.distributed", "torch.nn.intrinsic", "threading", "copy", "functools", "enum", "warnings", "contextlib", "itertools", "torch.nn.quantized", "inspect", "logging", "torch", "math", "collections", "torch.nn", "numbers", "torch.distributed.rpc.backend_registry", "torch.distributed", "torch.nn.intrinsic", "threading", "copy", "functools", "enum", "warnings", "contextlib", "itertools", "torch.nn.quantized", "inspect", "logging", "torch", "math", "collections", "torch.nn", "numbers", "torch.distributed.rpc.backend_registry", "torch.distributed", "torch.nn.intrinsic", "threading", "copy", "functools", "enum", "warnings", "contextlib", "itertools", "torch.nn.quantized", "inspect", "logging", "torch", "math", "collections", "torch.nn", "numbers", "torch.distributed.rpc.backend_registry", "torch.distributed", "torch.nn.intrinsic", "threading", "copy", "functools", "enum", "warnings", "contextlib", "itertools", "torch.nn.quantized", "inspect", "logging", "torch", "math", "collections", "torch.nn", "numbers", "torch.distributed.rpc.backend_registry", "torch.distributed", "torch.nn.intrinsic", "threading", "copy", "functools", "enum", "warnings", "contextlib", "itertools", "torch.nn.quantized", "inspect", "logging", "torch", "math", "collections", "torch.nn", "numbers", "torch.distributed.rpc.backend_registry", "torch.distributed", "torch.nn.intrinsic", "threading", "copy", "functools", "enum", "warnings", "contextlib", "itertools", "torch.nn.quantized", "inspect", "logging", "torch", "math", "collections", "torch.nn", "numbers", "torch.distributed.rpc.backend_registry", "torch.distributed", "torch.nn.intrinsic", "threading", "copy", "functools", "enum", "warnings", "contextlib", "itertools", "torch.nn.quantized", "inspect", "logging", "torch", "math", "collections", "torch.nn", "numbers", "torch.distributed.rpc.backend_registry", "torch.distributed", "torch.nn.intrinsic", "threading", "copy", "functools", "enum", "warnings", "contextlib", "itertools", "torch.nn.quantized", "inspect", "logging", "torch", "math", "collections", "torch.nn", "numbers", "torch.distributed.rpc.backend_registry", "torch.distributed", "torch.nn.intrinsic", "threading", "copy", "functools", "enum", "warnings", "contextlib", "itertools", "torch.nn.quantized", "inspect", "logging", "torch", "math", "collections", "torch.nn", "numbers", "torch.distributed.rpc.backend_registry", "torch.distributed", "torch.nn.intrinsic", "threading", "copy", "functools", "enum", "warnings", "contextlib", "itertools", "torch.nn.quantized", "inspect", "logging", "torch", "math", "collections", "torch.nn", "numbers", "torch.distributed.rpc.backend_registry", "torch.distributed", "torch.nn.intrinsic", "threading", "copy", "functools", "enum", "warnings", "contextlib", "itertools", "torch.nn.quantized", "inspect", "logging", "torch", "math", "collections", "torch.nn", "numbers", "torch.distributed.rpc.backend_registry", "torch.distributed", "torch.nn.intrinsic", "threading", "copy", "functools", "enum", "warnings", "contextlib", "itertools", "torch.nn.quantized", "inspect", "logging", "torch", "math", "collections", "torch.nn", "numbers", "torch.distributed.rpc.backend_registry", "torch.distributed", "torch.nn.intrinsic", "threading", "copy", "functools", "enum", "warnings", "contextlib", "itertools", "torch.nn.quantized", "inspect", "logging", "torch", "math", "collections", "torch.nn", "numbers", "torch.distributed.rpc.backend_registry", "torch.distributed", "torch.nn.intrinsic", "threading", "copy", "functools", "enum", "warnings", "contextlib", "itertools", "torch.nn.quantized", "inspect", "logging", "torch", "math", "collections", "torch.nn", "numbers", "torch.distributed.rpc.backend_registry", "torch.distributed", "torch.nn.intrinsic", "threading", "copy", "functools", "enum", "warnings", "contextlib", "itertools", "torch.nn.quantized", "inspect", "logging", "torch", "math", "collections", "torch.nn", "numbers", "torch.distributed.rpc.backend_registry", "torch.distributed", "torch.nn.intrinsic", "threading", "copy", "functools", "enum", "warnings", "contextlib", "itertools", "torch.nn.quantized", "inspect", "logging", "torch", "math", "collections", "torch.nn", "numbers", "torch.distributed.rpc.backend_registry", "torch.distributed", "torch.nn.intrinsic", "threading", "copy", "functools", "enum", "warnings", "contextlib", "itertools", "torch.nn.quantized", "inspect", "logging", "torch", "math", "collections", "torch.nn", "numbers", "torch.distributed.rpc.backend_registry", "torch.distributed", "torch.nn.intrinsic", "threading", "copy", "functools", "enum", "warnings", "contextlib", "itertools", "torch.nn.quantized", "inspect", "logging", "torch", "math", "collections", "torch.nn", "numbers", "torch.distributed.rpc.backend_registry", "torch.distributed", "torch.nn.intrinsic", "threading", "copy", "functools", "enum", "warnings", "contextlib", "itertools", "torch.nn.quantized", "inspect", "logging", "torch", "math", "collections", "torch.nn", "numbers", "torch.distributed.rpc.backend_registry", "torch.distributed", "torch.nn.intrinsic", "threading", "copy", "functools", "enum", "warnings", "contextlib", "itertools", "torch.nn.quantized", "inspect", "logging", "torch", "math", "collections", "torch.nn", "numbers", "torch.distributed.rpc.backend_registry", "torch.distributed", "torch.nn.intrinsic", "threading", "copy", "functools", "enum", "warnings", "contextlib", "itertools", "torch.nn.quantized", "inspect", "logging", "torch", "math", "collections", "torch.nn", "numbers", "torch.distributed.rpc.backend_registry", "torch.distributed", "torch.nn.intrinsic", "threading", "copy", "functools", "enum", "warnings", "contextlib", "itertools", "torch.nn.quantized", "inspect", "logging", "torch", "math", "collections", "torch.nn", "numbers", "torch.distributed.rpc.backend_registry", "torch.distributed", "torch.nn.intrinsic", "threading", "copy", "functools", "enum", "warnings", "contextlib", "itertools", "torch.nn.quantized", "inspect", "logging", "torch", "math", "collections", "torch.nn", "numbers", "torch.distributed.rpc.backend_registry", "torch.distributed", "torch.nn.intrinsic", "threading", "copy", "functools", "enum", "warnings", "contextlib", "itertools", "torch.nn.quantized", "inspect", "logging", "torch", "math", "collections", "torch.nn", "numbers", "torch.distributed.rpc.backend_registry", "torch.distributed", "torch.nn.intrinsic", "threading", "copy", "functools", "enum", "warnings", "contextlib", "itertools", "torch.nn.quantized", "inspect", "logging", "torch", "math", "collections", "torch.nn", "numbers", "torch.distributed.rpc.backend_registry", "torch.distributed", "torch.nn.intrinsic", "threading", "copy", "functools", "enum", "warnings", "contextlib", "itertools", "torch.nn.quantized", "inspect", "logging", "torch", "math", "collections", "torch.nn", "numbers", "torch.distributed.rpc.backend_registry", "torch.distributed", "torch.nn.intrinsic", "threading", "copy", "functools", "enum", "warnings", "contextlib", "itertools", "torch.nn.quantized", "inspect", "logging", "torch", "math", "collections", "torch.nn", "numbers", "torch.distributed.rpc.backend_registry", "torch.distributed", "torch.nn.intrinsic", "threading", "copy", "functools", "enum", "warnings", "contextlib", "itertools", "torch.nn.quantized", "inspect", "logging", "torch", "math", "collections", "torch.nn", "numbers", "torch.distributed.rpc.backend_registry", "torch.distributed", "torch.nn.intrinsic", "threading", "copy", "functools", "enum", "warnings", "contextlib", "itertools", "torch.nn.quantized", "inspect", "logging", "torch", "math", "collections", "torch.nn", "numbers", "torch.distributed.rpc.backend_registry", "torch.distributed", "torch.nn.intrinsic", "threading", "copy", "functools", "enum", "warnings", "contextlib", "itertools", "torch.nn.quantized", "inspect", "logging", "torch", "math", "collections", "torch.nn", "numbers", "torch.distributed.rpc.backend_registry", "torch.distributed", "torch.nn.intrinsic", "threading", "copy", "functools", "enum", "warnings", "contextlib", "itertools", "torch.nn.quantized", "inspect", "logging", "torch", "math", "collections", "torch.nn", "numbers", "torch.distributed.rpc.backend_registry", "torch.distributed", "torch.nn.intrinsic", "threading", "copy", "functools", "enum", "warnings", "contextlib", "itertools", "torch.nn.quantized", "inspect", "logging", "torch", "math", "collections", "torch.nn", "numbers", "torch.distributed.rpc.backend_registry", "torch.distributed", "torch.nn.intrinsic", "threading", "copy", "functools", "enum", "warnings", "contextlib", "itertools", "torch.nn.quantized", "inspect", "logging", "torch", "math", "collections", "torch.nn", "numbers", "torch.distributed.rpc.backend_registry", "torch.distributed", "torch.nn.intrinsic", "threading", "copy", "functools", "enum", "warnings", "contextlib", "itertools", "torch.nn.quantized", "inspect", "logging", "torch", "math", "collections", "torch.nn", "numbers", "torch.distributed.rpc.backend_registry", "torch.distributed", "torch.nn.intrinsic", "threading", "copy", "functools", "enum", "warnings", "contextlib", "itertools", "torch.nn.quantized", "inspect", "logging", "torch", "math", "collections", "torch.nn", "numbers", "torch.distributed.rpc.backend_registry", "torch.distributed", "torch.nn.intrinsic", "threading", "copy", "functools", "enum", "warnings", "contextlib", "itertools", "torch.nn.quantized", "inspect", "logging", "torch", "math", "collections", "torch.nn", "numbers", "torch.distributed.rpc.backend_registry", "torch.distributed", "torch.nn.intrinsic", "threading", "copy", "functools", "enum", "warnings", "contextlib", "itertools", "torch.nn.quantized", "inspect", "logging", "torch", "math", "collections", "torch.nn", "numbers", "torch.distributed.rpc.backend_registry", "torch.distributed", "torch.nn.intrinsic", "threading", "copy", "functools", "enum", "warnings", "contextlib", "itertools", "torch.nn.quantized", "inspect", "logging", "torch", "math", "collections", "torch.nn", "numbers", "torch.distributed.rpc.backend_registry", "torch.distributed", "torch.nn.intrinsic", "threading", "copy", "functools", "enum", "warnings", "contextlib", "itertools", "torch.nn.quantized", "inspect", "logging", "torch", "math", "collections", "torch.nn", "numbers", "torch.distributed.rpc.backend_registry", "torch.distributed", "torch.nn.intrinsic", "threading", "copy", "functools", "enum", "warnings", "contextlib", "itertools", "torch.nn.quantized", "inspect", "logging", "torch", "math", "collections", "torch.nn", "numbers", "torch.distributed.rpc.backend_registry", "torch.distributed", "torch.nn.intrinsic", "threading", "copy", "functools", "enum", "warnings", "contextlib", "itertools", "torch.nn.quantized", "inspect", "logging", "torch", "math", "collections", "torch.nn", "numbers", "torch.distributed.rpc.backend_registry", "torch.distributed", "torch.nn.intrinsic", "threading", "copy", "functools", "enum", "warnings", "contextlib", "itertools", "torch.nn.quantized", "inspect", "logging", "torch", "math", "collections", "torch.nn", "numbers", "torch.distributed.rpc.backend_registry", "torch.distributed", "torch.nn.intrinsic", "threading", "copy", "functools", "enum", "warnings", "contextlib", "itertools", "torch.nn.quantized", "inspect", "logging", "torch", "math", "collections", "torch.nn", "numbers", "torch.distributed.rpc.backend_registry", "torch.distributed", "torch.nn.intrinsic", "threading", "copy", "functools", "enum", "warnings", "contextlib", "itertools", "torch.nn.quantized", "inspect", "logging", "torch", "math", "collections", "torch.nn", "numbers", "torch.distributed.rpc.backend_registry", "torch.distributed", "torch.nn.intrinsic", "threading", "copy", "functools", "enum", "warnings", "contextlib", "itertools", "torch.nn.quantized", "inspect", "logging", "torch", "math", "collections", "torch.nn", "numbers", "torch.distributed.rpc.backend_registry", "torch.distributed", "torch.nn.intrinsic", "threading", "copy", "functools", "enum", "warnings", "contextlib", "itertools", "torch.nn.quantized", "inspect", "logging", "torch", "math", "collections", "torch.nn", "numbers", "torch.distributed.rpc.backend_registry", "torch.distributed", "torch.nn.intrinsic", "threading", "copy", "functools", "enum", "warnings", "contextlib", "itertools", "torch.nn.quantized", "inspect", "logging", "torch", "math", "collections", "torch.nn", "numbers", "torch.distributed.rpc.backend_registry", "torch.distributed", "torch.nn.intrinsic", "threading", "copy", "functools", "enum", "warnings", "contextlib", "itertools", "torch.nn.quantized", "inspect", "logging", "torch", "math", "collections", "torch.nn", "numbers", "torch.distributed.rpc.backend_registry", "torch.distributed", "torch.nn.intrinsic", "threading", "copy", "functools", "enum", "warnings", "contextlib", "itertools", "torch.nn.quantized", "inspect", "logging", "torch", "math", "collections", "torch.nn", "numbers", "torch.distributed.rpc.backend_registry", "torch.distributed", "torch.nn.intrinsic", "threading", "copy", "functools", "enum", "warnings", "contextlib", "itertools", "torch.nn.quantized", "inspect", "logging", "torch", "math", "collections", "torch.nn", "numbers", "torch.distributed.rpc.backend_registry", "torch.distributed", "torch.nn.intrinsic", "threading", "copy", "functools", "enum", "warnings", "contextlib", "itertools", "torch.nn.quantized", "inspect", "logging", "torch", "math", "collections", "torch.nn", "numbers", "torch.distributed.rpc.backend_registry", "torch.distributed", "torch.nn.intrinsic", "threading", "copy", "functools", "enum", "warnings", "contextlib", "itertools", "torch.nn.quantized", "inspect", "logging", "torch", "math", "collections", "torch.nn", "numbers", "torch.distributed.rpc.backend_registry", "torch.distributed", "torch.nn.intrinsic", "threading", "copy", "functools", "enum", "warnings", "contextlib", "itertools", "torch.nn.quantized", "inspect", "logging", "torch", "math", "collections", "torch.nn", "numbers", "torch.distributed.rpc.backend_registry", "torch.distributed", "torch.nn.intrinsic", "threading", "copy", "functools", "enum", "warnings", "contextlib", "itertools", "torch.nn.quantized", "inspect", "logging", "torch", "math", "collections", "torch.nn", "numbers", "torch.distributed.rpc.backend_registry", "torch.distributed", "torch.nn.intrinsic", "threading", "copy", "functools", "enum", "warnings", "contextlib", "itertools", "torch.nn.quantized", "inspect", "logging", "torch", "math", "collections", "torch.nn", "numbers", "torch.distributed.rpc.backend_registry", "torch.distributed", "torch.nn.intrinsic", "threading", "copy", "functools", "enum", "warnings", "contextlib", "itertools", "torch.nn.quantized", "inspect", "logging", "torch", "math", "collections", "torch.nn", "numbers", "torch.distributed.rpc.backend_registry", "torch.distributed", "torch.nn.intrinsic", "threading", "copy", "functools", "enum", "warnings", "contextlib", "itertools", "torch.nn.quantized", "inspect", "logging", "torch", "math", "collections", "torch.nn", "numbers", "torch.distributed.rpc.backend_registry", "torch.distributed", "torch.nn.intrinsic", "threading", "copy", "functools", "enum", "warnings", "contextlib", "itertools", "torch.nn.quantized", "inspect", "logging", "torch", "math", "collections", "torch.nn", "numbers", "torch.distributed.rpc.backend_registry", "torch.distributed", "torch.nn.intrinsic", "threading", "copy", "functools", "enum", "warnings", "contextlib", "itertools", "torch.nn.quantized", "inspect", "logging", "torch", "math", "collections", "torch.nn", "numbers", "torch.distributed.rpc.backend_registry", "torch.distributed", "torch.nn.intrinsic", "threading", "copy", "functools", "enum", "warnings", "contextlib", "itertools", "torch.nn.quantized", "inspect", "logging", "torch", "math", "collections", "torch.nn", "numbers", "torch.distributed.rpc.backend_registry", "torch.distributed", "torch.nn.intrinsic", "threading", "copy", "functools", "enum", "warnings", "contextlib", "itertools", "torch.nn.quantized", "inspect", "logging", "torch", "math", "collections", "torch.nn", "numbers", "torch.distributed.rpc.backend_registry", "torch.distributed", "torch.nn.intrinsic", "threading", "copy", "functools", "enum", "warnings", "contextlib", "itertools", "torch.nn.quantized", "inspect", "logging", "torch", "math", "collections", "torch.nn", "numbers", "torch.distributed.rpc.backend_registry", "torch.distributed", "torch.nn.intrinsic", "threading", "copy", "functools", "enum", "warnings", "contextlib", "itertools", "torch.nn.quantized", "inspect", "logging", "torch", "math", "collections", "torch.nn", "numbers", "torch.distributed.rpc.backend_registry", "torch.distributed", "torch.nn.intrinsic", "threading", "copy", "functools", "enum", "warnings", "contextlib", "itertools", "torch.nn.quantized", "inspect", "logging", "torch", "math", "collections", "torch.nn", "numbers", "torch.distributed.rpc.backend_registry", "torch.distributed", "torch.nn.intrinsic", "threading", "copy", "functools", "enum", "warnings", "contextlib", "itertools", "torch.nn.quantized", "inspect", "logging", "torch", "math", "collections", "torch.nn", "numbers", "torch.distributed.rpc.backend_registry", "torch.distributed", "torch.nn.intrinsic", "threading", "copy", "functools", "enum", "warnings", "contextlib", "itertools", "torch.nn.quantized", "inspect", "logging", "torch", "math", "collections", "torch.nn", "numbers", "torch.distributed.rpc.backend_registry", "torch.distributed", "torch.nn.intrinsic", "threading", "copy", "functools", "enum", "warnings", "contextlib", "itertools", "torch.nn.quantized", "inspect", "logging", "torch", "math", "collections", "torch.nn", "numbers", "torch.distributed.rpc.backend_registry", "torch.distributed", "torch.nn.intrinsic", "threading", "copy", "functools", "enum", "warnings", "contextlib", "itertools", "torch.nn.quantized", "inspect", "logging", "torch", "math", "collections", "torch.nn", "numbers", "torch.distributed.rpc.backend_registry", "torch.distributed", "torch.nn.intrinsic", "threading", "copy", "functools", "enum", "warnings", "contextlib", "itertools", "torch.nn.quantized", "inspect", "logging", "torch", "math", "collections", "torch.nn", "numbers", "torch.distributed.rpc.backend_registry", "torch.distributed", "torch.nn.intrinsic", "threading", "copy", "functools", "enum", "warnings", "contextlib", "itertools", "torch.nn.quantized", "inspect", "logging", "torch", "math", "collections", "torch.nn", "numbers", "torch.distributed.rpc.backend_registry", "torch.distributed", "torch.nn.intrinsic", "threading", "copy", "functools", "enum", "warnings", "contextlib", "itertools", "torch.nn.quantized", "inspect", "logging", "torch", "math", "collections", "torch.nn", "numbers", "torch.distributed.rpc.backend_registry", "torch.distributed", "torch.nn.intrinsic", "threading", "copy", "functools", "enum", "warnings", "contextlib", "itertools", "torch.nn.quantized", "inspect", "logging", "torch", "math", "collections", "torch.nn", "numbers", "torch.distributed.rpc.backend_registry", "torch.distributed", "torch.nn.intrinsic", "threading", "copy", "functools", "enum", "warnings", "contextlib", "itertools", "torch.nn.quantized", "inspect", "logging", "torch", "math", "collections", "torch.nn", "numbers", "torch.distributed.rpc.backend_registry", "torch.distributed", "torch.nn.intrinsic", "threading", "copy", "functools", "enum", "warnings", "contextlib", "itertools", "torch.nn.quantized", "inspect", "logging", "torch", "math", "collections", "torch.nn", "numbers", "torch.distributed.rpc.backend_registry", "torch.distributed", "torch.nn.intrinsic", "threading", "copy", "functools", "enum", "warnings", "contextlib", "itertools", "torch.nn.quantized", "inspect", "logging", "torch", "math", "collections", "torch.nn", "numbers", "torch.distributed.rpc.backend_registry", "torch.distributed", "torch.nn.intrinsic", "threading", "copy", "functools", "enum", "warnings", "contextlib", "itertools", "torch.nn.quantized", "inspect", "logging", "torch", "math", "collections", "torch.nn", "numbers", "torch.distributed.rpc.backend_registry", "torch.distributed", "torch.nn.intrinsic", "threading", "copy", "functools", "enum", "warnings", "contextlib", "itertools", "torch.nn.quantized", "inspect", "logging", "torch", "math", "collections", "torch.nn", "numbers", "torch.distributed.rpc.backend_registry", "torch.distributed", "torch.nn.intrinsic", "threading", "copy", "functools", "enum", "warnings", "contextlib", "itertools", "torch.nn.quantized", "inspect", "logging", "torch", "math", "collections", "torch.nn", "numbers", "torch.distributed.rpc.backend_registry", "torch.distributed", "torch.nn.intrinsic", "threading", "copy", "functools", "enum", "warnings", "contextlib", "itertools", "torch.nn.quantized", "inspect", "logging", "torch", "math", "collections", "torch.nn", "numbers", "torch.distributed.rpc.backend_registry", "torch.distributed", "torch.nn.intrinsic", "threading", "copy", "functools", "enum", "warnings", "contextlib", "itertools", "torch.nn.quantized", "inspect", "logging", "torch", "math", "collections", "torch.nn", "numbers", "torch.distributed.rpc.backend_registry", "torch.distributed", "torch.nn.intrinsic", "threading", "copy", "functools", "enum", "warnings", "contextlib", "itertools", "torch.nn.quantized", "inspect", "logging", "torch", "math", "collections", "torch.nn", "numbers", "torch.distributed.rpc.backend_registry", "torch.distributed", "torch.nn.intrinsic", "threading", "copy", "functools", "enum", "warnings", "contextlib", "itertools", "torch.nn.quantized", "inspect", "logging", "torch", "math", "collections", "torch.nn", "numbers", "torch.distributed.rpc.backend_registry", "torch.distributed", "torch.nn.intrinsic", "threading", "copy", "functools", "enum", "warnings", "contextlib", "itertools", "torch.nn.quantized", "inspect", "logging", "torch", "math", "collections", "torch.nn", "numbers", "torch.distributed.rpc.backend_registry", "torch.distributed", "torch.nn.intrinsic", "threading", "copy", "functools", "enum", "warnings", "contextlib", "itertools", "torch.nn.quantized", "inspect", "logging", "torch", "math", "collections", "torch.nn", "numbers", "torch.distributed.rpc.backend_registry", "torch.distributed", "torch.nn.intrinsic", "threading", "copy", "functools", "enum", "warnings", "contextlib", "itertools", "torch.nn.quantized", "inspect", "logging", "torch", "math", "collections", "torch.nn", "numbers", "torch.distributed.rpc.backend_registry", "torch.distributed", "torch.nn.intrinsic", "threading", "copy", "functools", "enum", "warnings", "contextlib", "itertools", "torch.nn.quantized", "inspect", "logging", "torch", "math", "collections", "torch.nn", "numbers", "torch.distributed.rpc.backend_registry", "torch.distributed", "torch.nn.intrinsic", "threading", "copy", "functools", "enum", "warnings", "contextlib", "itertools", "torch.nn.quantized", "inspect", "logging", "torch", "math", "collections", "torch.nn", "numbers", "torch.distributed.rpc.backend_registry", "torch.distributed", "torch.nn.intrinsic", "threading", "copy", "functools", "enum", "warnings", "contextlib", "itertools", "torch.nn.quantized", "inspect", "logging", "torch", "math", "collections", "torch.nn", "numbers", "torch.distributed.rpc.backend_registry", "torch.distributed", "torch.nn.intrinsic", "threading", "copy", "functools", "enum", "warnings", "contextlib", "itertools", "torch.nn.quantized", "inspect", "logging", "torch", "math", "collections", "torch.nn", "numbers", "torch.distributed.rpc.backend_registry", "torch.distributed", "torch.nn.intrinsic", "threading", "copy", "functools", "enum", "warnings", "contextlib", "itertools", "torch.nn.quantized", "inspect", "logging", "torch", "math", "collections", "torch.nn", "numbers", "torch.distributed.rpc.backend_registry", "torch.distributed", "torch.nn.intrinsic", "threading", "copy", "functools", "enum", "warnings", "contextlib", "itertools", "torch.nn.quantized", "inspect", "logging", "torch", "math", "collections", "torch.nn", "numbers", "torch.distributed.rpc.backend_registry", "torch.distributed", "torch.nn.intrinsic", "threading", "copy", "functools", "enum", "warnings", "contextlib", "itertools", "torch.nn.quantized", "inspect", "logging", "torch", "math", "collections", "torch.nn", "numbers", "torch.distributed.rpc.backend_registry", "torch.distributed", "torch.nn.intrinsic", "threading", "copy", "functools", "enum", "warnings", "contextlib", "itertools", "torch.nn.quantized", "inspect", "logging", "torch", "math", "collections", "torch.nn", "numbers", "torch.distributed.rpc.backend_registry", "torch.distributed", "torch.nn.intrinsic", "threading", "copy", "functools", "enum", "warnings", "contextlib", "itertools", "torch.nn.quantized", "inspect", "logging", "torch", "math", "collections", "torch.nn", "numbers", "torch.distributed.rpc.backend_registry", "torch.distributed", "torch.nn.intrinsic", "threading", "copy", "functools", "enum", "warnings", "contextlib", "itertools", "torch.nn.quantized", "inspect", "logging", "torch", "math", "collections", "torch.nn", "numbers", "torch.distributed.rpc.backend_registry", "torch.distributed", "torch.nn.intrinsic", "threading", "copy", "functools", "enum", "warnings", "contextlib", "itertools", "torch.nn.quantized", "inspect", "logging", "torch", "math", "collections", "torch.nn", "numbers", "torch.distributed.rpc.backend_registry", "torch.distributed", "torch.nn.intrinsic", "threading", "copy", "functools", "enum", "warnings", "contextlib", "itertools", "torch.nn.quantized", "inspect", "logging", "torch", "math", "collections", "torch.nn", "numbers", "torch.distributed.rpc.backend_registry", "torch.distributed", "torch.nn.intrinsic", "threading", "copy", "functools", "enum", "warnings", "contextlib", "itertools", "torch.nn.quantized", "inspect", "logging", "torch", "math", "collections", "torch.nn", "numbers", "torch.distributed.rpc.backend_registry", "torch.distributed", "torch.nn.intrinsic", "threading", "copy", "functools", "enum", "warnings", "contextlib", "itertools", "torch.nn.quantized", "inspect", "logging", "torch", "math", "collections", "torch.nn", "numbers", "torch.distributed.rpc.backend_registry", "torch.distributed", "torch.nn.intrinsic", "threading", "copy", "functools", "enum", "warnings", "contextlib", "itertools", "torch.nn.quantized", "inspect", "logging", "torch", "math", "collections", "torch.nn", "numbers", "torch.distributed.rpc.backend_registry", "torch.distributed", "torch.nn.intrinsic", "threading", "copy", "functools", "enum", "warnings", "contextlib", "itertools", "torch.nn.quantized", "inspect", "logging", "torch", "math", "collections", "torch.nn", "numbers", "torch.distributed.rpc.backend_registry", "torch.distributed", "torch.nn.intrinsic", "threading", "copy", "functools", "enum", "warnings", "contextlib", "itertools", "torch.nn.quantized", "inspect", "logging", "torch", "math", "collections", "torch.nn", "numbers", "torch.distributed.rpc.backend_registry", "torch.distributed", "torch.nn.intrinsic", "threading", "copy", "functools", "enum", "warnings", "contextlib", "itertools", "torch.nn.quantized", "inspect", "logging", "torch", "math", "collections", "torch.nn", "numbers", "torch.distributed.rpc.backend_registry", "torch.distributed", "torch.nn.intrinsic", "threading", "copy", "functools", "enum", "warnings", "contextlib", "itertools", "torch.nn.quantized", "inspect", "logging", "torch", "math", "collections", "torch.nn", "numbers", "torch.distributed.rpc.backend_registry", "torch.distributed", "torch.nn.intrinsic", "threading", "copy", "functools", "enum", "warnings", "contextlib", "itertools", "torch.nn.quantized", "inspect", "logging", "torch", "math", "collections", "torch.nn", "numbers", "torch.distributed.rpc.backend_registry", "torch.distributed", "_importlib_modulespec", "abc", "torch._C._VariableFunctions", "torch.cuda", "torch.cuda.streams", "torch.nn.modules", "torch.nn.modules.module", "torch.random", "torch.tensor", "types"], "hash": "d00e3df592618d6296987067a3d97f5d", "id": "torch.jit", "ignore_all": true, "interface_hash": "8e8c406a3fd090cba0e03fbdfc145419", "mtime": 1601726430, "options": {"allow_redefinition": false, "allow_untyped_globals": false, "always_false": [], "always_true": [], "bazel": false, "check_untyped_defs": false, "disallow_any_decorated": false, "disallow_any_explicit": false, "disallow_any_expr": false, "disallow_any_generics": false, "disallow_any_unimported": false, "disallow_incomplete_defs": false, "disallow_subclassing_any": false, "disallow_untyped_calls": false, "disallow_untyped_decorators": false, "disallow_untyped_defs": false, "follow_imports": "silent", "follow_imports_for_stubs": false, "ignore_errors": false, "ignore_missing_imports": true, "implicit_reexport": true, "local_partial_types": false, "mypyc": false, "new_semantic_analyzer": true, "no_implicit_optional": false, "platform": "linux", "plugins": [], "show_none_errors": true, "strict_equality": false, "strict_optional": true, "strict_optional_whitelist": null, "warn_no_return": true, "warn_return_any": false, "warn_unreachable": false, "warn_unused_ignores": false}, "path": "/home/gsir059/absum/lib/python3.6/site-packages/torch/jit/__init__.py", "size": 105276, "suppressed": [], "version_id": "0.720"}